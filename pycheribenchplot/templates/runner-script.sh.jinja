#!/bin/bash
#
# ** Do not edit **
# This script is generated by cheri-benchplot.
#

# $1 = output string
if [ -n "$CHERI_BENCHPLOT_VERBOSE" ]; then
	function verbose()
	{
		echo "$1"
	}
else
	function verbose()
	{
		return 0
	}
fi

echo "Run benchmark configuration ID={{ dataset_id }} with {{ iterations }} iterations."
echo "Instance '{{ instance.name }}' ID={{ dataset_gid }}."
echo "Parameters:"
{% for pkey, pval in parameters.items() %}
echo -e "\t{{ pkey }}='{{ pval }}'"
{% endfor %}
#
{% macro gen_hook(phase, hook) %}
  verbose "{{ phase }} hook '{{ hook.name }}'"
  {% if hook.template -%}
    {% include 'templates/hooks/%s' % hook.template %}
  {% else %}
    {% for cmd in hook.commands %}
      {{ cmd }}
    {% endfor %}
  {% endif %}
{% endmacro %}
#
{% macro gen_iter_hook(phase, iteration, hook) %}
  verbose "{{ phase }} iteration {{ iteration }} hook '{{ hook.name }}'"
  {% if hook.template -%}
    {% include 'templates/hooks/%s' % hook.template %}
  {% else %}
    {% for cmd in hook.commands %}
      {{ cmd }}
    {% endfor %}
  {% endif %}
{% endmacro %}

#### Global setup
{% block global_setup %}
  {% for hook in setup_hooks -%}
    {{ gen_hook("Setup", hook) }}
  {% endfor %}
{% endblock %}

#### Run loop
{% block iteration_loop %}
  {% for current_iteration in range(iterations) %}
    {% block iteration_setup scoped %}
      {% for hook in iter_setup_hooks %}
        {{ gen_iter_hook("Setup", current_iteration, hook) }}
      {% endfor %}
    {% endblock iteration_setup %}

    {% block iteration_exec scoped %}
    {% endblock iteration_exec %}

    {% block iteration_teardown scoped %}
      {% for hook in iter_teardown_hooks %}
        {{ gen_iter_hook("Teardown", current_iteration, hook) }}
      {% endfor %}
    {% endblock iteration_teardown %}
  {% endfor %}
{% endblock iteration_loop %}

#### Global teardown
{% block global_teardown %}
  {% for hook in teardown_hooks %}
    {{ gen_hook("Teardown", hook) }}
  {% endfor %}
{% endblock %}
